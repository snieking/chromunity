import util;

function find_topic_by_id(id: text): topic {
    return topic@{ .id == id };
}

function require_mutable(post_timestamp: timestamp, op_timestamp: timestamp, action: text) {
	val fiveMinutesInMillis = 300000;
    require(
    	op_timestamp < post_timestamp + fiveMinutesInMillis,
    	util.app_error(util.error_type.TOPIC_IMMUTABLE, action)
    );
}

function get_latest_poster_in_topic(id: text, topic_author: name): text {
	val latest_reply = topic_reply@?{ 
		.topic.id == id,
		.removed == false
	} (
		@sort_desc .timestamp,
		.author
	) limit 1;
	
	if (latest_reply != null) {
		return latest_reply.author.display_name;
	} else {
		return topic_author;
	}
}
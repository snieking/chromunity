//namespace ft3 {
  class asset {
    id: byte_array;
    key id;
    key name;
    issuing_chain_rid: byte_array;
  }

  class balance {
    key account, asset;
    mutable amount: integer = 0;
  }

  function ensure_balance(account, asset): balance {
    val balance = balance @? {asset, account};
    if (balance != null) {
       return balance;
    }
    else return create balance(account, asset, amount = 0);
  }

  function register_asset (name, issuing_chain_rid: byte_array): asset {
   val id = (name, issuing_chain_rid).hash();
   return create asset (id, name, issuing_chain_rid);
  }

  query get_asset_balances(account_id: byte_array) {
    return balance @* { .account.id == account_id } (
        id = .asset.id,
        name = .asset.name,
        amount = .amount,
        chain_id = .asset.issuing_chain_rid
    );
  }

  query get_asset_balance(account_id: byte_array, asset_id: byte_array) {
    return balance @? {
        .account.id == account_id,
        .asset.id == asset_id
    } (
        id = .asset.id,
        name = .asset.name,
        amount = .amount,
        chain_id = .asset.issuing_chain_rid
    );
  }

  query get_asset_by_name(name) {
    return asset @* { name } (
        .id,
        .name,
        .issuing_chain_rid
    );
  }
// }

